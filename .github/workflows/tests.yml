name: Tests

on:
  pull_request:
  push:
    branches:
      - "main"

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    env: 
      AUTH_CLIENT: regtech-client
      AUTH_URL: http://localhost:8880/realms/regtech/protocol/openid-connect/auth
      TOKEN_URL: http://localhost:8880/realms/regtech/protocol/openid-connect/token
      CERTS_URL: http://localhost:8880/realms/regtech/protocol/openid-connect/certs
      KC_URL: http://localhost:8880/;KC_REALM=regtech;KC_ADMIN_CLIENT_ID=admin-cli
      KC_ADMIN_CLIENT_SECRET: local_test_only
      KC_REALM_URL: http://localhost:8880/realms/regtech
      DB_NAME: filing
      DB_USER: filing_user
      DB_PWD: filing_user
      DB_HOST: localhost:5432
      DB_SCHEMA: filing
      JWT_OPTS_VERIFY_AT_HASH: false
      JWT_OPTS_VERIFY_AUD: false
      JWT_OPTS_VERIFY_ISS: false
      FS_UPLOAD_CONFIG__PROTOCOL: file
      FS_UPLOAD_CONFIG__ROOT: ../upload
      INST_DB_HOST: localhost:5432
      INST_DB_NAME: financial_institutions
      INST_DB_PWD: fi
      INST_DB_SCHEMA: public
      INST_DB_USER: fi
      EXPIRED_SUBMISSION_CHECK_SECS: 120
      SERVER_CONFIG__RELOAD: true
      PYTHONUNBUFFERED: 1
      DB_SCHEME: postgresql
    permissions:
      # Gives the action the necessary permissions for publishing new
      # comments in pull requests.
      pull-requests: write
      # Gives the action the necessary permissions for pushing data to the
      # python-coverage-comment-action branch, and for editing existing
      # comments (to avoid publishing multiple comments in the same PR)
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-root
      - name: Launch tests & generate report
        run: poetry run pytest
      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          verbose: true
      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v4
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          # If you use a different name, update COMMENT_ARTIFACT_NAME accordingly
          name: python-coverage-comment-action
          # If you use a different name, update COMMENT_FILENAME accordingly
          path: python-coverage-comment-action.txt